function fig_force_vel
% Makes force-pCa figure

% Variables
sim_dir = '../simulations/a/permeabilized/sim_data/fv_pCa45/isotonic/sim_output';
n_cond = 3;
release_time_s = 1;
fit_time_s = [1.05 1.3];

output_file_string = '../output/fig_force_vel';
output_types = {'png', 'eps', 'svg'};


f_scaling_factor = 0.001;
y_label_offset = -0.22;
x_label_offset = -0.3;
f_ticks = 0:20:100;
vel_ticks = [0 2];
p_ticks = [0 15];
table_font_size = 8;
marker_size = 6;
marker_symbols = {'o','d','s'};
marker_edge_colors = zeros(3,3);
marker_face_colors = [0 0.7 0 ; 0.3 0.3 0.3 ; 0.7 0 0];
leg_strings = {'Control', 'Crit', 'Crit+drug'};

% Cycle through data folders
for i = 1 : n_cond
    cond_dir = fullfile(sim_dir, sprintf('%i', i));
    cond_files = findfiles('txt', cond_dir, 0)';

    for j = 1 : numel(cond_files)
        d = readtable(cond_files{j});
        ti = find( (d.time > fit_time_s(1)) & ...
                    (d.time <= fit_time_s(2)) );
        d_fit = d(ti,:);

        pd(i).f(j) = f_scaling_factor * mean(d_fit.force);

        x_fit = d_fit.time - release_time_s;
        [s,a,k,r_sq,y_fit] = fit_single_exponential( ...
            x_fit, d_fit.hs_length);

        pd(i).v(j) = 1e-9 * k * a;
        pd(i).v_rel(j) = k * a / d.hs_length(1);
        pd(i).p(j) = 0.001 * (1/f_scaling_factor) * pd(i).f(j) * pd(i).v(j) / ...
                    (1e-9 * d.hs_length(1));
    end
end

% Make the figure
figure(1);
clf

sp = initialise_publication_quality_figure( ...
        'no_of_panels_wide', 1, ...
        'no_of_panels_high', 2, ...
        'axes_padding_left', 0.9, ...
        'axes_padding_right', 0.2, ...
        'axes_padding_bottom', 0.5, ...
        'top_margin', 0, ...
        'bottom_margin', 0, ...
        'x_to_y_axes_ratio', 2);

size_offset = 1*[0 -1 2]
for i = 1 : n_cond
    subplot(sp(1))
    hold on;
    h(i) = plot(pd(i).f, pd(i).v_rel, marker_symbols{i}, ...
        'MarkerFaceColor', 'none', ...
        'MarkerEdgeColor', marker_face_colors(i,:), ...
        'MarkerSize', marker_size + size_offset(i));

    [~,~,~,~,x_fit, y_fit] = fit_hyperbola( ...
        'x_data', pd(i).f, 'y_data', pd(i).v_rel);

    plot(x_fit, y_fit, '-', ...
        'LineWidth', 1 + 0.5*size_offset(i), ...
        'Color', marker_face_colors(i,:));

    subplot(sp(2))
    hold on;

    plot(pd(i).f, pd(i).p, marker_symbols{i}, ...
        'MarkerFaceColor', 'none', ...
        'MarkerEdgeColor', marker_face_colors(i,:), ...
        'MarkerSize', marker_size + size_offset(i))

    [~,~,~,~,x_fit, y_fit] = fit_power_curve(pd(i).f, pd(i).p);

    plot(x_fit, y_fit, '-', ...
        'LineWidth', 1 + 0.5*size_offset(i), ...
        'Color', marker_face_colors(i,:))

end

subplot(sp(1))
legendflex(h, leg_strings, ...
    'xscale', 0.5, ...
    'FontSize', 8, ...
    'padding', [2 2 2]);

improve_axes( ...
    'axis_handle', sp(1), ...
    'x_axis_offset', 0, ...
    'y_axis_offset', 0, ...
    'x_ticks', f_ticks, ...
    'x_tick_decimal_places', 0, ...
    'x_axis_label', {'Force normalized to area (kN m^{-2})'}, ...
    'x_label_offset', x_label_offset, ...
    'y_axis_label', {'Shortening','velocity','(l_0 s^{-1})'}, ...
    'y_label_offset', y_label_offset, ...
    'y_ticks', vel_ticks, ...
    'y_tick_decimal_places', 1);

improve_axes( ...
    'axis_handle', sp(2), ...
    'x_axis_offset', 0, ...
    'y_axis_offset', 0, ...
    'x_ticks', f_ticks, ...
    'x_tick_decimal_places', 0, ...
    'x_axis_label', {'Force normalized to area (kN m^{-2})'}, ...
    'x_label_offset', x_label_offset, ...
    'y_axis_label', {'Power','(W kg^{-1})'}, ...
    'y_label_offset', y_label_offset, ...
    'y_ticks', p_ticks, ...
    'y_tick_decimal_places', 1);

for i = 1 : numel(output_types)
    figure_export('output_file_string', output_file_string, ...
        'output_type', output_types{i});
end